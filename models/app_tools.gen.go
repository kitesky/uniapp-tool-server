// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package models

import (
	"time"
	"app-api/boot"
	"gorm.io/gorm"
)

const TableNameAppTool = "app_tools"

// AppTool mapped from table <app_tools>
type AppTool struct {
	ID          int32     `gorm:"column:id;type:int;primaryKey;autoIncrement:true" json:"id"`
	TaxonomyID  int32     `gorm:"column:taxonomy_id;type:int;comment:归类ID" json:"taxonomy_id"`               // 归类ID
	Icon        string    `gorm:"column:icon;type:varchar(64);comment:工具图标" json:"icon"`                     // 工具图标
	URL         string    `gorm:"column:url;type:varchar(255);comment:URL地址" json:"url"`                     // URL地址
	Title       string    `gorm:"column:title;type:varchar(255);comment:标题" json:"title"`                    // 标题
	Description string    `gorm:"column:description;type:varchar(255);comment:描述" json:"description"`        // 描述
	Content     string    `gorm:"column:content;type:text;comment:详情" json:"content"`                        // 详情
	Status      string    `gorm:"column:status;type:char(10);default:N;comment:是否上线 Y 禁用 N 否" json:"status"` // 是否上线 Y 禁用 N 否
	Sort        int32     `gorm:"column:sort;type:int;comment:排序" json:"sort"`                               // 排序
	Price       float64   `gorm:"column:price;type:decimal(10,2);default:0.00;comment:价格" json:"price"`      // 价格
	MarketPrice float64   `gorm:"column:market_price;type:decimal(10,2);default:0.00;comment:价格" json:"market_price"`      // 市场价格
	Recommend   string    `gorm:"column:recommend;type:text;comment:详情" json:"recommend"`                        // 是否推荐
	Code        string    `gorm:"column:code;type:text;comment:工具标识代码" json:"code"` 
	Message     string    `gorm:"column:message;type:char(255);comment:消息格式" json:"message"`                 // 消息格式
	FormSchemas string    `gorm:"column:form_schemas;type:text;comment:表单json格式" json:"form_schemas"`        // 表单json格式
	CreatedAt   time.Time `gorm:"column:created_at;type:timestamp;comment:创建时间" json:"created_at"`           // 创建时间
	UpdatedAt   time.Time `gorm:"column:updated_at;type:timestamp;comment:更新时间" json:"updated_at"`           // 更新时间
}

// TableName AppTool's table name
func (*AppTool) TableName() string {
	return TableNameAppTool
}

func (s *AppTool) AfterFind(tx *gorm.DB) (err error) {
	prefix := boot.Config.App.AssetUrl
	if s.Icon != "" {
		s.Icon = prefix + s.Icon
	}

	return
}
